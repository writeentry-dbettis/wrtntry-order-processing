on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      ref:
        required: true
        type: string
      artifactName:
        required: true
        type: string
      serviceName:
        required: true
        type: string

permissions:
  id-token: write
  contents: read
  
jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      # Repo checkout is unnecessary for CODE, but required for GCP Auth
      #   DO NOT REMOVE THIS STEP
      - name: Checkout Repo
        uses: "actions/checkout@v4"

      - name: Download all artifacts from build job to CWD
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifactName }}

      - name: Authenticate to GCP
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: 'access_token'
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      - name: Authenicate to Artifact Registry
        id: ar-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ vars.REGION }}-docker.pkg.dev"

      - name: Build & Push Container
        id: build-image
        uses: "docker/build-push-action@v3"
        with:
          context: app
          file: Dockerfile
          push: true
          tags: |
            ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY }}/${{ inputs.serviceName }}:${{ inputs.ref }}

      - name: Create Service Declaration
        run: |-
          export CONTAINER_IMAGE="${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY }}/${{ vars.serviceName }}:${{ inputs.ref }}"
          export SERVICE_NAME="${{ inputs.serviceName }}"
          export PROJECT_ID="${{ vars.GCP_PROJECT_ID }}"
          export REVISION_TAG="${{ inputs.ref }}"
          export CLOUD_RUN_SA="${{ vars.CLOUD_RUN_SA }}"
          export ENVIRONMENT="${{ inputs.environment }}"
          envsubst < ./service-yaml/container.yaml > container-${{ inputs.environment }}.yaml

      - name: Deploy Image
        id: deploy-image
        uses: "google-github-actions/deploy-cloudrun@v0"
        with:
          service: ${{ vars.SERVICE_NAME }}
          region: ${{ vars.REGION }}
          metadata: container-${{ inputs.environment }}.yaml
