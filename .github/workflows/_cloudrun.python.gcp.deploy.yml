on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      ref:
        required: true
        type: string
      artifactName:
        required: true
        type: string
      serviceName:
        required: true
        type: string
      functionEntryPoint:
        required: true
        type: string
        default: 'function'
      functionSignature:
        required: true
        type: string
        default: 'http'

env:
  PYTHON_VERSION: '3.12.x'

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}

    steps:
      # Repo checkout is unnecessary for CODE, but required for GCP Auth
      #   DO NOT REMOVE THIS STEP
      - name: Checkout Repo
        uses: "actions/checkout@v4"
        with:
          path: "repo"

      - name: Authenticate to GCP
        id: auth
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          project_id: "${{ vars.GCP_PROJECT_ID }}"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT }}"

      - name: Authenicate to Artifact Registry
        id: ar-auth
        uses: "docker/login-action@v1"
        with:
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"
          registry: "${{ vars.REGION }}-docker.pkg.dev"

      - name: Download all artifacts from build job to CWD
        uses: actions/download-artifact@v4
        with:
          name: ${{ inputs.artifactName }}

      - name: Build & Push Container
        id: build-image
        run: |
          docker run \
            -v /var/run/docker.sock:/var/run/docker.sock \
            -v $PWD/app:/workspace \
            -w /workspace \
            -e GOOGLE_FUNCTION_TARGET=${{ inputs.functionEntryPoint }} \
            -e GOOGLE_FUNCTION_SIGNATURE=${{ inputs.functionSignature }} \
            -e GOOGLE_PYTHON_VERSION=${{ env.PYTHON_VERSION }} \
            buildpacksio/pack build ${{ env.imageName }} --builder "gcr.io/buildpacks/builder"
          docker push ${{ env.imageName }}
        env:
          imageName: ${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY }}/${{ inputs.serviceName }}:${{ inputs.ref }}
          
      - name: Deploy Image
        id: deploy-image
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: ${{ inputs.serviceName }}
          region: ${{ vars.REGION }}
          project_id: ${{ vars.GCP_PROJECT_ID }}
          # metadata: container-${{ inputs.environment }}.yaml
          image: "${{ vars.REGION }}-docker.pkg.dev/${{ vars.GCP_PROJECT_ID }}/${{ vars.ARTIFACT_REPOSITORY }}/${{ inputs.serviceName }}:${{ inputs.ref }}"
